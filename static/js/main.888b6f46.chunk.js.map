{"version":3,"sources":["components/Navbar.js","graphql/mutations.js","components/AddSong.js","graphql/subscriptions.js","components/SongList.js","graphql/queries.js","components/QueuedSongList.js","components/SongPlayer.js","reducer.js","App.js","graphql/client.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","title","marginLeft","spacing","Navbar","classes","AppBar","color","position","Toolbar","HeadsetTwoTone","Typography","variant","component","className","ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","container","display","alignItems","urlInput","margin","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","artist","AddSong","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","useMutation","addSong","error","useEffect","SoundcloudPlayer","canPlay","YoutubePlayer","handleCloseDialog","handleAddSong","a","variables","length","console","dir","handleEditSong","player","nestedPlayer","getVideoData","songData","getYoutubeInfo","getCurrentSound","getSoundCloudInfo","getDuration","video_id","author","Promise","resolve","Number","user","username","thumnnail","artwork_url","replace","handleSongChange","e","target","name","value","handleError","field","graphQLErrors","extensions","path","includes","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","label","fullWidth","onChange","helperText","DialogActions","Button","onClick","placeholder","type","inputProps","startAdornment","InputAdornment","Link","endIcon","AddBoxOutlined","disabled","hidden","onReady","GET_SONGS","songInfoContainer","songInfo","justifyContent","height","Song","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","id","Card","CardMedia","image","CardContent","gutterBottom","CardActions","IconButton","size","payload","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","music","map","key","GET_QUEUED_SONGS","avatar","marginRight","text","textOverflow","overflow","flex","whiteSpace","QueuedSong","Avatar","Delete","QueuedSongList","queuedSongs","log","i","details","padding","content","controls","paddingLeft","paddingRight","playIcon","SongPlayer","useQuery","reactPlayerRef","useRef","played","setPlayed","seeking","setSeeking","playedSeconds","setPlayedSeconds","positionInQueue","setPositionInQueue","greaterThanMd","useMediaQuery","breakpoints","up","songIndex","findIndex","nextSong","prevSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","min","max","step","onMouseDown","onMouseUp","current","seekTo","newValue","ref","onProgress","playing","songReducer","action","React","createContext","App","initialSongState","useReducer","Provider","Grid","item","xs","md","right","top","left","bottom","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","createMuiTheme","palette","primary","teal","secondary","purple","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.888b6f46.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\r\nimport { HeadsetTwoTone } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"primary\" position=\"fixed\">\r\n      <Toolbar>\r\n        <HeadsetTwoTone />\r\n        <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\r\n          Music Share\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\r\n  mutation addOrRemoveFromQueue($input: SongInput!) {\r\n    addOrRemoveFromQueue(input: $input) @client\r\n  }\r\n`;\r\n\r\nexport const ADD_SONG = gql`\r\nmutation addSong($title: String!, $artist: String!, $duration: Float!, $thumbnail: String!, $url: String!) {\r\n  insert_music(objects: {title: $title, artist: $artist, duration: $duration, thumbnail: $thumbnail, url: $url}) {\r\n    affected_rows\r\n  }\r\n}\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  TextField, \r\n  InputAdornment, \r\n  Button, \r\n  DialogActions,\r\n  Dialog, \r\n  DialogTitle, \r\n  DialogContent,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Link, AddBoxOutlined } from '@material-ui/icons';\r\nimport ReactPlayer from 'react-player';\r\nimport SoundcloudPlayer from 'react-player/lib/players/SoundCloud';\r\nimport YoutubePlayer from 'react-player/lib/players/YouTube';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_SONG } from '../graphql/mutations';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  urlInput: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  addSongButton: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  dialog: {\r\n    textAlign: 'center',\r\n  },\r\n  thumbnail: {\r\n    width: '90%'\r\n  }\r\n}));\r\n\r\nconst DEFAULT_SONG = {\r\n  duration: 0,\r\n  title: '',\r\n  artist: '',\r\n  thumbnail: ''\r\n}\r\n\r\nconst AddSong = () => {\r\n\r\n  const classes = useStyles();\r\n  const [url, setUrl] = useState('');\r\n  const [playable, setPlayable] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [song, setSong] = useState(DEFAULT_SONG);\r\n\r\n  const [addSong, { error }] = useMutation(ADD_SONG);\r\n\r\n  useEffect(() => {\r\n    setPlayable(SoundcloudPlayer.canPlay(url) || YoutubePlayer.canPlay(url));\r\n  }, [url]);\r\n\r\n  const handleCloseDialog = () => {\r\n    setDialog(false);\r\n  }\r\n\r\n  const handleAddSong = async () => {\r\n    try {\r\n      const { url, thumbnail, duration, title, artist } = song;\r\n      await addSong({\r\n        variables: {\r\n          url: url.length > 0 ? url : null,\r\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\r\n          duration: duration > 0 ? duration : null,\r\n          title: title.length > 0 ? title : null,\r\n          artist: artist.length > 0 ? artist : null,\r\n        }\r\n      });\r\n      handleCloseDialog();\r\n      setSong(DEFAULT_SONG);\r\n      setUrl('');\r\n    } catch (err) {\r\n      console.dir(err);\r\n    }\r\n  }\r\n\r\n  const handleEditSong = async ({ player }) => {\r\n    const nestedPlayer = player.player.player;\r\n    let songData;\r\n    if(nestedPlayer.getVideoData) {\r\n      songData = getYoutubeInfo(nestedPlayer);\r\n    } else if(nestedPlayer.getCurrentSound) {\r\n      songData = await getSoundCloudInfo(nestedPlayer);\r\n    }\r\n    setSong({ ...songData, url });\r\n  }\r\n\r\n  const getYoutubeInfo = (player) => {\r\n    const duration = player.getDuration();\r\n    const { title, video_id, author } = player.getVideoData();\r\n    const thumbnail = `http://img.youtube.com/vi/${video_id}/0.jpg`;\r\n    return {\r\n      duration,\r\n      title,\r\n      artist: author,\r\n      thumbnail\r\n    }\r\n  }\r\n\r\n  const getSoundCloudInfo = (player) => {\r\n    return new Promise((resolve) => {\r\n      player.getCurrentSound((songData) => {\r\n        if(songData) {\r\n          resolve({\r\n            duration: Number(songData.duration / 1000),\r\n            title: songData.title,\r\n            artist: songData.user.username,\r\n            thumnnail: songData.artwork_url.replace('-large', '-t500x500')\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleSongChange = (e) => {\r\n    setSong({\r\n      ...song,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  const handleError = (field) => {\r\n    return error?.graphQLErrors[0]?.extensions?.path?.includes(field);\r\n  }\r\n\r\n  const {thumbnail, title, artist} = song;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Dialog\r\n        className={classes.dialog}\r\n        open={dialog}\r\n        onClose={handleCloseDialog}\r\n      >\r\n        <DialogTitle>Редактировать музыку</DialogTitle>\r\n        <DialogContent>\r\n          <img className={classes.thumbnail} src={thumbnail} alt={title} />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            fullWidth\r\n            value={title}\r\n            onChange={handleSongChange}\r\n            error={handleError('title')}\r\n            helperText={handleError('title') && 'Fill out the field'}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"artist\"\r\n            label=\"Artist\"\r\n            fullWidth\r\n            value={artist}\r\n            onChange={handleSongChange}\r\n            error={handleError('artist')}\r\n            helperText={handleError('tiartisttle') && 'Fill out the field'}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"thumbnail\"\r\n            label=\"Thumbnail\"\r\n            fullWidth\r\n            value={thumbnail}\r\n            onChange={handleSongChange}\r\n            error={handleError('thumbnail')}\r\n            helperText={handleError('thumbnail') && 'Fill out the field'}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"secondary\">Отмена</Button>\r\n          <Button onClick={handleAddSong} variant=\"outlined\" color=\"primary\">Добавить музыку</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <TextField\r\n        onChange={(e) => setUrl(e.target.value)}\r\n        value={url}\r\n        className={classes.urlInput}\r\n        placeholder=\"Добавьте URL-адрес Youtube или Soundcloud\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        type=\"url\"\r\n        inputProps={{\r\n          startAdornment: (\r\n            <InputAdornment>\r\n              <Link />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n\r\n      <Button\r\n        className={classes.addSongButton}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        endIcon={<AddBoxOutlined />}\r\n        onClick={() => setDialog(true)}\r\n        disabled={!playable}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      <ReactPlayer \r\n        url={url} \r\n        hidden\r\n        onReady={handleEditSong}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSong;\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_SONGS = gql`\r\nsubscription getSongs {\r\n  music(order_by: {created_at: desc}) {\r\n    artist\r\n    created_at\r\n    duration\r\n    id\r\n    thumbnail\r\n    title\r\n    url\r\n  }\r\n}\r\n`;","import { \r\n  CardContent, \r\n  CircularProgress, \r\n  IconButton,\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardActions,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { \r\n  PlayArrow,\r\n  Save,\r\n  Pause\r\n} from '@material-ui/icons';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useSubscription, useMutation } from '@apollo/client';\r\nimport { GET_SONGS } from '../graphql/subscriptions';\r\nimport { SongContext } from '../App';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\r\n\r\nconst SongList = () => {\r\n  const { loading, error, data } = useSubscription(GET_SONGS);\r\n\r\n  if(loading) {\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: 50\r\n      }}>\r\n        <CircularProgress />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error) {\r\n    return (\r\n      <div>Error</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {data.music.map((song) => (\r\n        <Song key={song.id} song={song} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    margin: theme.spacing(3)\r\n  },\r\n  songInfoContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  songInfo: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  thumbnail: {\r\n    width: 140,\r\n    height: 140\r\n  }\r\n}));\r\n\r\nconst Song = ({song}) => {\r\n  const classes = useStyles();\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem('queuedSongs', JSON.stringify(data.addOrRemoveFromQueue));\r\n    }\r\n  });\r\n  const { state, dispatch } = useContext(SongContext);\r\n  const [currentSongPlaying, setCurrentSongPlaying] = useState(false);\r\n\r\n  const {title, artist, thumbnail} = song;\r\n\r\n  useEffect(() => {\r\n    const isSongPlaying = state.isPlaying && song.id === state.song.id;\r\n\r\n    setCurrentSongPlaying(isSongPlaying);\r\n  }, [song.id, state.song.id, state.isPlaying]);\r\n\r\n  const handleTogglePlay = () => {\r\n    dispatch({ type: \"SET_SONG\", payload: { song } });\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  const handleAddOrRemoveFromQueue = () => {\r\n    addOrRemoveFromQueue({\r\n      variables: {\r\n        input: { ...song, __typename: 'Song' }\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.container}>\r\n      <div className={classes.songInfoContainer}>\r\n        <CardMedia className={classes.thumbnail} image={thumbnail} />\r\n        <div className={classes.songInfo}>\r\n          <CardContent>\r\n            <Typography \r\n              gutterBottom \r\n              variant=\"h5\" \r\n              component=\"h2\"\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\" \r\n              component=\"p\"\r\n              color=\"textSecondary\"\r\n            >\r\n              {artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <IconButton size=\"small\" color=\"primary\" onClick={handleTogglePlay}>\r\n            {currentSongPlaying ? (\r\n                <Pause />\r\n              ) : (\r\n                <PlayArrow />\r\n              )}\r\n            </IconButton>\r\n            <IconButton size=\"small\" color=\"secondary\" onClick={handleAddOrRemoveFromQueue}>\r\n              <Save />\r\n            </IconButton>\r\n          </CardActions>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SongList\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_QUEUED_SONGS = gql`\r\n  query getQueuedSongs {\r\n    queuedSongs @client {\r\n      id,\r\n      duration,\r\n      title,\r\n      artist,\r\n      thumbnail,\r\n      url\r\n    }\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport { Typography, Avatar, IconButton, makeStyles } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\r\n\r\nconst QueuedSongList = ({ queuedSongs }) => {\r\n  console.log({queuedSongs});\r\n  return (\r\n    <div style={{margin: '10px 0'}}>\r\n      <Typography color=\"textSecondary\" variant=\"button\">\r\n        Мои аудиозаписи ({queuedSongs.length})\r\n      </Typography>\r\n      {\r\n        queuedSongs.map((song, i) => (\r\n          <QueuedSong key={i} song={song} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 44,\r\n    height: 44,\r\n    marginRight: 15\r\n  },\r\n  text: {\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: 10\r\n  },\r\n  songInfoContainer: {\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap'\r\n  }\r\n});\r\n\r\nfunction QueuedSong({song}) {\r\n  const classes = useStyles();\r\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\r\n    onCompleted: data => {\r\n      localStorage.setItem('queuedSongs', JSON.stringify(data.addOrRemoveFromQueue));\r\n    }\r\n  });\r\n  const { title, artist, thumbnail } = song; \r\n\r\n  const handleAddOrRemoveFromQueue = () => {\r\n    addOrRemoveFromQueue({\r\n      variables: {\r\n        input: { ...song, __typename: 'Song' }\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Avatar className={classes.avatar} src={thumbnail} alt=\"Song thumbnail\" />\r\n      <div className={classes.songInfoContainer}>\r\n        <Typography className={classes.text} variant=\"subtitle2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography className={classes.text} color=\"textSecondary\" variant=\"body2\">\r\n          {artist}\r\n        </Typography>\r\n      </div>\r\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\r\n        <Delete color=\"error\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueuedSongList\r\n","import React, { Fragment, useContext, useState, useRef, useEffect } from 'react'\r\nimport { \r\n  CardContent,\r\n  Card,\r\n  Typography,\r\n  IconButton,\r\n  Slider,\r\n  CardMedia,\r\n  makeStyles,\r\n  useMediaQuery\r\n} from '@material-ui/core'\r\nimport {\r\n  SkipPrevious,\r\n  PlayArrow,\r\n  SkipNext,\r\n  Pause\r\n} from '@material-ui/icons'\r\nimport { SongContext } from '../App';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_QUEUED_SONGS } from '../graphql/queries';\r\nimport QueuedSongList from './QueuedSongList';\r\nimport ReactPlayer from 'react-player';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '0px 15px',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto'\r\n  },\r\n  thumbnail: {\r\n    width: 150\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    width: 38,\r\n    height: 38\r\n  }\r\n}));\r\n\r\nconst SongPlayer = () => {\r\n\r\n  const { data } = useQuery(GET_QUEUED_SONGS);\r\n  const reactPlayerRef = useRef();\r\n  const {state, dispatch} = useContext(SongContext);\r\n  const [played, setPlayed] = useState(0);\r\n  const [seeking, setSeeking] = useState(false);\r\n  const [playedSeconds, setPlayedSeconds] = useState(0);\r\n  const [positionInQueue, setPositionInQueue] = useState(0);\r\n  const classes = useStyles();\r\n\r\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\r\n\r\n  useEffect(() => {\r\n    const songIndex = data.queuedSongs.findIndex((song) => {\r\n      return song.id === state.song.id\r\n    });\r\n    setPositionInQueue(songIndex);\r\n  }, [data.queuedSongs, state.song.id]);\r\n\r\n  useEffect(() => {\r\n    const nextSong = data.queuedSongs[positionInQueue + 1];\r\n    if(played >= 0.99 && nextSong) {\r\n      setPlayed(0);\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }, [data.queuedSongs, played, dispatch, positionInQueue]);\r\n\r\n  const handleTogglePlay = () => {\r\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\r\n  }\r\n\r\n  const handleSeekMouseDown = () => {\r\n    setSeeking(true);\r\n  }\r\n  const handleSeekMouseUp = () => {\r\n    setSeeking(false);\r\n    reactPlayerRef.current.seekTo(played);\r\n  }\r\n\r\n  const handleProgressChange = (e, newValue) => {\r\n    setPlayed(newValue);\r\n  }\r\n\r\n  const formatDuration = (seconds) => {\r\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\r\n  }\r\n  \r\n  const handlePlayNextSong = () => {\r\n    const nextSong = data.queuedSongs[positionInQueue + 1];\r\n    if(nextSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\r\n    }\r\n  }\r\n\r\n  const handlePlayPrevSong = () => {\r\n    const prevSong = data.queuedSongs[positionInQueue - 1];\r\n    if(prevSong) {\r\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.container} variant=\"outlined\">\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography variant=\"h5\" component=\"h3\">\r\n              {state.song.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n            {state.song.artist}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={classes.controls}>\r\n            <IconButton onClick={handlePlayPrevSong}>\r\n              <SkipPrevious />\r\n            </IconButton>\r\n            <IconButton onClick={handleTogglePlay}>\r\n              {state.isPlaying ? (\r\n                <Pause className={classes.playIcon} />\r\n              ) : (\r\n                <PlayArrow className={classes.playIcon} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton onClick={handlePlayNextSong}>\r\n              <SkipNext />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\r\n              {formatDuration(playedSeconds)}\r\n            </Typography>\r\n          </div>\r\n          <Slider \r\n            type=\"range\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={played}\r\n            onMouseDown={handleSeekMouseDown}\r\n            onMouseUp={handleSeekMouseUp}\r\n            onChange={handleProgressChange}\r\n          />\r\n        </div>\r\n        <ReactPlayer\r\n        ref={reactPlayerRef}\r\n          onProgress={({ played, playedSeconds }) => {\r\n            if(!seeking) {\r\n              setPlayed(played);\r\n              setPlayedSeconds(playedSeconds);\r\n            }\r\n          }} \r\n          url={state.song.url} \r\n          playing={state.isPlaying} \r\n          hidden \r\n        />\r\n        <CardMedia\r\n          className={classes.thumbnail }\r\n          image={state.song.thumbnail}\r\n        />\r\n      </Card>\r\n      {\r\n        greaterThanMd && (\r\n          <QueuedSongList queuedSongs={data.queuedSongs} />\r\n        )\r\n      }\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SongPlayer\r\n","const songReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case \"PLAY_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: true\r\n      }\r\n    }\r\n    case \"PAUSE_SONG\": {\r\n      return {\r\n        ...state,\r\n        isPlaying: false\r\n      }\r\n    }\r\n    case \"SET_SONG\": {\r\n      return {\r\n        ...state,\r\n        song: action.payload.song\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default songReducer;","import React from 'react';\nimport Navbar from './components/Navbar';\nimport AddSong from './components/AddSong';\nimport SongList from './components/SongList';\nimport SongPlayer from './components/SongPlayer';\nimport { Grid, useMediaQuery } from '@material-ui/core';\nimport './App.css';\nimport songReducer from './reducer';\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"adc1333d-a4ca-4a33-ac21-f0ee730b90b8\",\n    title: \"Madcon\",\n    artist: \"Beggin\",\n    thumbnail: \"http://img.youtube.com/vi/zrFI2gJSuwA/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=zrFI2gJSuwA&ab_channel=oficialmadcon\",\n    duration: 224\n  },\n  isPlaying: false\n});\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up('md'));\n\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Navbar />\n      <Grid container spacing={3} style={{marginTop: '80px'}}>\n        <Grid item xs={12} md={7}>\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid \n          style={\n          greaterThanMd ?\n            {\n              position: 'fixed',\n              width: '100%',\n              right: '17px',\n              top: '70px'\n            } : {\n              position: 'fixed',\n              width: '100%',\n              left: '0',\n              bottom: '0'\n            }\n          } \n          item \n          xs={12} \n          md={5}\n        >\n          <SongPlayer />\n          \n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport { WebSocketLink } from '@apollo/client/link/ws';\r\nimport { gql } from '@apollo/client';\r\nimport { GET_QUEUED_SONGS } from './queries';\r\n\r\nconst client = new ApolloClient({\r\n  link: new WebSocketLink({\r\n    uri: `wss://music.hasura.app/v1/graphql`,\r\n    options: {\r\n      reconnect: true\r\n    },\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  typeDefs: gql`\r\n    type Song {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      url: String!\r\n      duration: Float!\r\n    }\r\n\r\n    input SongInput {\r\n      id: uuid!\r\n      title: String!\r\n      artist: String!\r\n      thumbnail: String!\r\n      url: String!\r\n      duration: Float!\r\n    }\r\n\r\n    type Query {\r\n      queuedSongs: [Song]!\r\n    }\r\n\r\n    type Mutation {\r\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\r\n    }\r\n  `,\r\n  resolvers: {\r\n    Mutation: {\r\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\r\n        const queryResult = cache.readQuery({\r\n          query: GET_QUEUED_SONGS\r\n        });\r\n        if (queryResult) {\r\n          const { queuedSongs } = queryResult;\r\n          const isInQueue = queuedSongs.some(song => song.id === input.id);\r\n          const newQueue = isInQueue\r\n            ? queuedSongs.filter(song => song.id !== input.id)\r\n            : [...queuedSongs, input];\r\n          cache.writeQuery({\r\n            query: GET_QUEUED_SONGS,\r\n            data: { queuedSongs: newQueue }\r\n          });\r\n          return newQueue;\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst hasQueue = Boolean(localStorage.getItem('queuedSongs'));\r\n\r\nconst data = {\r\n  queuedSongs: hasQueue ? JSON.parse(localStorage.getItem('queuedSongs')) : []\r\n}\r\n\r\nclient.writeQuery({ query: GET_QUEUED_SONGS, data });\r\n\r\nexport default client;","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { teal, purple } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: teal,\r\n    secondary: purple\r\n  }\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './graphql/client';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n      </MuiThemeProvider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}